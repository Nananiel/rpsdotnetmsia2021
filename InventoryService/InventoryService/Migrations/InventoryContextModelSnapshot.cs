// <auto-generated />
using System;
using InventoryService.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace InventoryService.Migrations
{
    [DbContext(typeof(InventoryContext))]
    partial class InventoryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("InventoryService.Models.Catalog", b =>
                {
                    b.Property<long>("CatalogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Catalog_Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CatalogName")
                        .IsRequired()
                        .HasColumnName("Catalog_Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("CatalogId");

                    b.ToTable("Catalog");
                });

            modelBuilder.Entity("InventoryService.Models.Location", b =>
                {
                    b.Property<long>("RegionalCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Regional_Code")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LocationAddress")
                        .HasColumnName("Location_Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("MobileNo")
                        .HasColumnName("Mobile_No")
                        .HasColumnType("bigint");

                    b.HasKey("RegionalCode");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("InventoryService.Models.Product", b =>
                {
                    b.Property<long>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Product_Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CatalogId")
                        .HasColumnName("Catalog_Id")
                        .HasColumnType("bigint");

                    b.Property<int>("ProductType")
                        .HasColumnName("Product_Type")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("CatalogId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("InventoryService.Models.ProductSupplier", b =>
                {
                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<long>("SupplierId")
                        .HasColumnType("bigint");

                    b.HasKey("ProductId", "SupplierId");

                    b.HasIndex("SupplierId");

                    b.ToTable("ProductSuppliers");
                });

            modelBuilder.Entity("InventoryService.Models.Stock", b =>
                {
                    b.Property<long>("InvoiceNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Invoice_No")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comments")
                        .HasColumnName("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("LocationId")
                        .HasColumnName("Location_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("ProductId")
                        .HasColumnName("Product_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("Qty")
                        .HasColumnName("Qty")
                        .HasColumnType("bigint");

                    b.HasKey("InvoiceNo");

                    b.HasIndex("LocationId");

                    b.HasIndex("ProductId");

                    b.ToTable("Stock");
                });

            modelBuilder.Entity("InventoryService.Models.Supplier", b =>
                {
                    b.Property<long>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SupplierId")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("SupplierId");

                    b.ToTable("Supplier");
                });

            modelBuilder.Entity("InventoryService.Models.Product", b =>
                {
                    b.HasOne("InventoryService.Models.Catalog", "Catalog")
                        .WithMany("ProductList")
                        .HasForeignKey("CatalogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("InventoryService.Models.ProductDetail", "ProductDetail", b1 =>
                        {
                            b1.Property<long>("ProductId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<long>("Cost")
                                .HasColumnName("Cost")
                                .HasColumnType("bigint");

                            b1.Property<DateTime>("DOP")
                                .HasColumnName("Purchase_Date")
                                .HasColumnType("datetime2");

                            b1.Property<string>("Description")
                                .HasColumnName("Description")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("ProductName")
                                .HasColumnName("Product_Name")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ProductId");

                            b1.ToTable("Product");

                            b1.WithOwner()
                                .HasForeignKey("ProductId");
                        });
                });

            modelBuilder.Entity("InventoryService.Models.ProductSupplier", b =>
                {
                    b.HasOne("InventoryService.Models.Product", "Product")
                        .WithMany("ProductSuppliers")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InventoryService.Models.Supplier", "Supplier")
                        .WithMany("ProductSuppliers")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InventoryService.Models.Stock", b =>
                {
                    b.HasOne("InventoryService.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InventoryService.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InventoryService.Models.Supplier", b =>
                {
                    b.OwnsOne("InventoryService.Models.SupplierDetail", "SupplierDetail", b1 =>
                        {
                            b1.Property<long>("SupplierId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Address")
                                .HasColumnName("Address")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<long>("ContactNo")
                                .HasColumnName("Contact_No")
                                .HasColumnType("bigint");

                            b1.Property<string>("SupplierName")
                                .HasColumnName("Supplier_Name")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("SupplierId");

                            b1.ToTable("Supplier");

                            b1.WithOwner()
                                .HasForeignKey("SupplierId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
